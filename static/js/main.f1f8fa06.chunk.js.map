{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","robot","id","alt","name","email","CardList","robots","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","a","fetch","response","json","users","this","setState","filteredRobots","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,MAAMC,GAAtC,0BAAkEC,IAAI,UAC9E,6BAAKL,EAAMG,MAAMG,OACjB,6BAAKN,EAAMG,MAAMI,YCJVC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,OAAOC,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,WCLZO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAAmC,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCsCzHG,E,kDApCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,OAAQ,GACRS,YAAa,IAJH,E,4FAQd,8BAAAC,EAAA,sEACyBC,MAAM,8CAD/B,cACQC,EADR,gBAGsBA,EAASC,OAH/B,OAGQC,EAHR,OAKEC,KAAKC,SAAS,CACZhB,OAAQc,IANZ,gD,0EAUA,WAAU,IAAD,OACP,EAAgCC,KAAKP,MAA7BR,EAAR,EAAQA,OAAQS,EAAhB,EAAgBA,YACVQ,EAAiBjB,EAAOkB,QAAO,SAAAxB,GAAK,OAAIA,EAAMG,KAAKsB,cAAcC,SAASX,EAAYU,kBAE5F,OACE,sBAAK3B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEW,YAAY,gBAAgBC,aAC1B,SAACiB,GAAD,OAAO,EAAKL,SAAS,CAAEP,YAAaY,EAAEC,OAAOC,WAGjD,cAAC,EAAD,CAAUvB,OAAQiB,W,GA/BRO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f1f8fa06.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${props.robot.id}?set=set2&size=180x180`} alt=\"robot\" />\r\n      <h3>{props.robot.name}</h3>\r\n      <h4>{props.robot.email}</h4>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nimport \"./card-list.style.css\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.robots.map((robot) => (\r\n        <Card key={robot.id} robot={robot} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.style.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: ''\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n\n    const users = await response.json();\n\n    this.setState({\n      robots: users\n    });\n  }\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\" >\n        <h1>Ugliest React App</h1>\n        <SearchBox\n          placeholder=\"Search Robots\" handleChange={\n            (e) => this.setState({ searchField: e.target.value })\n          }\n        />\n        <CardList robots={filteredRobots} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}